name: Prod

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  TAG: 'prod'
  IMAGE_NAME: "ndt-api"
  CONTAINER_NAME: "ndt-api"
  PORT: 3000

  DATABASE_URL: ${{ vars.DATABASE_URL_PROD }}
  DATABASE_USER: ${{ vars.DATABASE_USER_PROD }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD_PROD }}
  DATABASE_NAME: ${{ vars.DATABASE_NAME_PROD }}

jobs:

  build:
    runs-on: prod
    steps:
      - uses: actions/checkout@v3
      - name: build
        run: |
          docker build --pull -t $IMAGE_NAME:$TAG --no-cache \ 
          --build-arg DATABASE_URL=$DATABASE_URL \
          --build-arg DATABASE_USER=$DATABASE_USER \
          --build-arg DATABASE_PASSWORD=$DATABASE_PASSWORD \
          --build-arg DATABASE_NAME=$DATABASE_NAME .

  stop:
    runs-on: prod
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: stop
        run: |
          docker stop $CONTAINER_NAME || true
          docker rm $CONTAINER_NAME || true
          
  deploy:
    runs-on: prod
    needs: [stop]
    steps:
      - uses: actions/checkout@v3
      - name: deploy
        run: |
          docker tag $IMAGE_NAME:$TAG $IMAGE_NAME:$TAG
          docker run -d --name $CONTAINER_NAME \
          -e DATABASE_URL=$DATABASE_URL \
          -e DATABASE_USER=$DATABASE_USER \
          -e DATABASE_PASSWORD=$DATABASE_PASSWORD \
          -e DATABASE_NAME=$DATABASE_NAME \
          -p $PORT:$PORT $IMAGE_NAME:$TAG

  cleanup:
    runs-on: prod
    needs: [deploy]
    steps:
      - uses: actions/checkout@v3
      - name: cleanup
        run: |
          docker image prune -f
          docker container prune -f
